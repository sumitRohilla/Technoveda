{"ast":null,"code":"var _jsxFileName = \"/home/coco/PROGRAM/Web Dev/Front-End/Project/Technoveda/main-tech/technoveda/src/components/Pages/Diseases/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"../../../Firebase.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const [result, setResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const ref = firebase.firestore().collection(\"Test\"); //   console.log(ref);\n\n  function getResult() {\n    setLoading(true);\n    ref.onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(doc => {\n        items.push(doc.data());\n      });\n      setResult(items);\n      setLoading(false);\n    });\n  } //console.log(result);\n\n\n  useEffect(() => {\n    getResult(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), result.map(results => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: results.res\n    }, \"123\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Test, \"9mzjSlYQRH4rxtykeg8VrsxIlTk=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/coco/PROGRAM/Web Dev/Front-End/Project/Technoveda/main-tech/technoveda/src/components/Pages/Diseases/Test.js"],"names":["React","useState","useEffect","firebase","Test","result","setResult","loading","setLoading","ref","firestore","collection","getResult","onSnapshot","querySnapshot","items","forEach","doc","push","data","map","results","res"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;AACF,QAAM,CAACM,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,KAAD,CAArC;AAGA,QAAMQ,GAAG,GAAGN,QAAQ,CAACO,SAAT,GAAqBC,UAArB,CAAgC,MAAhC,CAAZ,CANiB,CAOnB;;AACG,WAASC,SAAT,GAAqB;AACpBJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,GAAG,CAACI,UAAJ,CAAgBC,aAAD,IAAiB;AAC5B,YAAMC,KAAK,GAAG,EAAd;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAO;AACzBF,QAAAA,KAAK,CAACG,IAAN,CAAWD,GAAG,CAACE,IAAJ,EAAX;AACH,OAFD;AAGAb,MAAAA,SAAS,CAACS,KAAD,CAAT;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,KARD;AASD,GAnBgB,CAoBjB;;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AAEdU,IAAAA,SAAS,GAFK,CAGd;AACF,GAJS,EAIP,EAJO,CAAT;;AAMA,MAAGL,OAAH,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACK,sBAEI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,EAMKF,MAAM,CAACe,GAAP,CAAYC,OAAD,iBACJ;AAAA,gBAAcA,OAAO,CAACC;AAAtB,OAAO,KAAP;AAAA;AAAA;AAAA;AAAA,YADP,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAcP,CA7CD;;GAAMlB,I;;KAAAA,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport firebase from \"../../../Firebase.js\";\n\nconst Test = () => {\n\n    const [result,setResult] = useState([]);\n  const [loading,setLoading] = useState(false);\n\n  \n  const ref = firebase.firestore().collection(\"Test\");\n//   console.log(ref);\n   function getResult() {\n    setLoading(true);\n    ref.onSnapshot((querySnapshot)=>{\n        const items = [];\n        querySnapshot.forEach((doc)=>{\n            items.push(doc.data());\n        });\n        setResult(items);\n        setLoading(false);\n       \n    });\n  }\n  //console.log(result);\n\n  useEffect(() => {\n   \n    getResult();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n }, []) \n\n  if(loading){\n    return <h1>Loading....</h1>\n  }\n        return (\n          \n            <div>\n            <br />\n            <br />\n            <br />\n            <br />\n            <h1>Hello!!</h1>\n                {result.map((results)=>(\n                        <p key=\"123\">{results.res}</p>\n                )\n                )}\n            </div>\n        );\n};\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}