{"ast":null,"code":"const form = document.getElementsByTagName('form')[0];\nconst pre = document.getElementById('pre');\nconst preError = document.querySelector('#pre + span.error');\n\nwindow.onload = function () {\n  pre.addEventListener('input', function (event) {\n    // Each time the user types something, we check if the\n    // form fields are valid.\n    if (pre.validity.valid) {\n      // In case there is an error message visible, if the field\n      // is valid, we remove the error message.\n      preError.textContent = ''; // Reset the content of the message\n\n      preError.className = 'error'; // Reset the visual state of the message\n    } else {\n      // If there is still an error, show the correct error\n      showError();\n    }\n  });\n};\n\nform.addEventListener('submit', function (event) {\n  // if the email field is valid, we let the form submit\n  if (!pre.validity.valid) {\n    // If it isn't, we display an appropriate error message\n    showError(); // Then we prevent the form from being sent by canceling the event\n\n    event.preventDefault();\n  }\n});\n\nfunction showError() {\n  if (pre.validity.valueMissing) {\n    // If the field is empty,\n    // display the following error message.\n    preError.textContent = 'You need to enter an e-mail address.';\n  } else if (pre.validity.typeMismatch) {\n    // If the field doesn't contain an email address,\n    // display the following error message.\n    preError.textContent = 'Entered value needs to be an e-mail address.';\n  } else if (pre.validity.tooShort) {\n    // If the data is too short,\n    // display the following error message.\n    preError.textContent = `Email should be at least ${pre.minLength} characters; you entered ${pre.value.length}.`;\n  } // Set the styling appropriately\n\n\n  preError.className = 'error active';\n}","map":{"version":3,"sources":["/home/coco/PROGRAM/Web Dev/Front-End/Project/Technoveda/sumit/technoveda/src/components/Pages/Diseases/validation.js"],"names":["form","document","getElementsByTagName","pre","getElementById","preError","querySelector","window","onload","addEventListener","event","validity","valid","textContent","className","showError","preventDefault","valueMissing","typeMismatch","tooShort","minLength","value","length"],"mappings":"AAEA,MAAMA,IAAI,GAAIC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAd;AAEA,MAAMC,GAAG,GAAGF,QAAQ,CAACG,cAAT,CAAwB,KAAxB,CAAZ;AACA,MAAMC,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,mBAAvB,CAAjB;;AAEAC,MAAM,CAACC,MAAP,GAAc,YAAU;AAEpBL,EAAAA,GAAG,CAACM,gBAAJ,CAAqB,OAArB,EAA8B,UAAUC,KAAV,EAAiB;AAC3C;AACA;AAEA,QAAIP,GAAG,CAACQ,QAAJ,CAAaC,KAAjB,EAAwB;AACtB;AACA;AACAP,MAAAA,QAAQ,CAACQ,WAAT,GAAuB,EAAvB,CAHsB,CAGK;;AAC3BR,MAAAA,QAAQ,CAACS,SAAT,GAAqB,OAArB,CAJsB,CAIQ;AAC/B,KALD,MAKO;AACL;AACAC,MAAAA,SAAS;AACV;AACF,GAbH;AAcD,CAhBH;;AAqBEf,IAAI,CAACS,gBAAL,CAAsB,QAAtB,EAAgC,UAAUC,KAAV,EAAiB;AAC/C;AAEA,MAAG,CAACP,GAAG,CAACQ,QAAJ,CAAaC,KAAjB,EAAwB;AACtB;AACAG,IAAAA,SAAS,GAFa,CAGtB;;AACAL,IAAAA,KAAK,CAACM,cAAN;AACD;AACF,CATD;;AAaA,SAASD,SAAT,GAAqB;AACnB,MAAGZ,GAAG,CAACQ,QAAJ,CAAaM,YAAhB,EAA8B;AAC5B;AACA;AACAZ,IAAAA,QAAQ,CAACQ,WAAT,GAAuB,sCAAvB;AACD,GAJD,MAIO,IAAGV,GAAG,CAACQ,QAAJ,CAAaO,YAAhB,EAA8B;AACnC;AACA;AACAb,IAAAA,QAAQ,CAACQ,WAAT,GAAuB,8CAAvB;AACD,GAJM,MAIA,IAAGV,GAAG,CAACQ,QAAJ,CAAaQ,QAAhB,EAA0B;AAC/B;AACA;AACAd,IAAAA,QAAQ,CAACQ,WAAT,GAAwB,4BAA4BV,GAAG,CAACiB,SAAW,4BAA4BjB,GAAG,CAACkB,KAAJ,CAAUC,MAAQ,GAAjH;AACD,GAbkB,CAenB;;;AACAjB,EAAAA,QAAQ,CAACS,SAAT,GAAqB,cAArB;AACD","sourcesContent":["\n\nconst form  = document.getElementsByTagName('form')[0];\n\nconst pre = document.getElementById('pre');\nconst preError = document.querySelector('#pre + span.error');\n\nwindow.onload=function(){\n\n    pre.addEventListener('input', function (event) {\n        // Each time the user types something, we check if the\n        // form fields are valid.\n      \n        if (pre.validity.valid) {\n          // In case there is an error message visible, if the field\n          // is valid, we remove the error message.\n          preError.textContent = ''; // Reset the content of the message\n          preError.className = 'error'; // Reset the visual state of the message\n        } else {\n          // If there is still an error, show the correct error\n          showError();\n        }\n      });\n  }\n\n\n\n\n  form.addEventListener('submit', function (event) {\n    // if the email field is valid, we let the form submit\n  \n    if(!pre.validity.valid) {\n      // If it isn't, we display an appropriate error message\n      showError();\n      // Then we prevent the form from being sent by canceling the event\n      event.preventDefault();\n    }\n  });\n\n\n\n  function showError() {\n    if(pre.validity.valueMissing) {\n      // If the field is empty,\n      // display the following error message.\n      preError.textContent = 'You need to enter an e-mail address.';\n    } else if(pre.validity.typeMismatch) {\n      // If the field doesn't contain an email address,\n      // display the following error message.\n      preError.textContent = 'Entered value needs to be an e-mail address.';\n    } else if(pre.validity.tooShort) {\n      // If the data is too short,\n      // display the following error message.\n      preError.textContent = `Email should be at least ${ pre.minLength } characters; you entered ${ pre.value.length }.`;\n    }\n  \n    // Set the styling appropriately\n    preError.className = 'error active';\n  }"]},"metadata":{},"sourceType":"module"}