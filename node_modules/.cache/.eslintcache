[{"/home/coco/Github/sumit/technoveda/src/index.js":"1","/home/coco/Github/sumit/technoveda/src/App.js":"2","/home/coco/Github/sumit/technoveda/src/reportWebVitals.js":"3","/home/coco/Github/sumit/technoveda/src/components/Pages/Landing/Landing.js":"4","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/Diabetes.js":"5","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/BreastCancer.js":"6","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/Diseases.js":"7","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/heart-disease.js":"8","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/Liver-patient.js":"9","/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/Navbar.js":"10","/home/coco/Github/sumit/technoveda/src/components/Pages/Footer/Footer.js":"11","/home/coco/Github/sumit/technoveda/src/components/Pages/Authentication/Signup.js":"12","/home/coco/Github/sumit/technoveda/src/components/Pages/Loading/Loading.js":"13","/home/coco/Github/sumit/technoveda/src/components/Pages/Authentication/Login.js":"14","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/Cardiovascular.js":"15","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/CKD.js":"16","/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/ToolBar/ToolBar.js":"17","/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/SideDrawer/SideDrawer.js":"18","/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/BackDrop/BackDrop.js":"19","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/CommonCard.jsx":"20","/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/SideDrawer/DrawerToggleButton.js":"21"},{"size":500,"mtime":1653894239049,"results":"22","hashOfConfig":"23"},{"size":2196,"mtime":1653895926430,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1653894239049,"results":"25","hashOfConfig":"23"},{"size":3313,"mtime":1653894239049,"results":"26","hashOfConfig":"23"},{"size":5344,"mtime":1653894239049,"results":"27","hashOfConfig":"23"},{"size":7979,"mtime":1653894239049,"results":"28","hashOfConfig":"23"},{"size":1866,"mtime":1653894239049,"results":"29","hashOfConfig":"23"},{"size":8097,"mtime":1653894239049,"results":"30","hashOfConfig":"23"},{"size":6886,"mtime":1653894239049,"results":"31","hashOfConfig":"23"},{"size":1070,"mtime":1653894239049,"results":"32","hashOfConfig":"23"},{"size":2096,"mtime":1653894239049,"results":"33","hashOfConfig":"23"},{"size":4425,"mtime":1653894239049,"results":"34","hashOfConfig":"23"},{"size":307,"mtime":1653894239049,"results":"35","hashOfConfig":"23"},{"size":1765,"mtime":1653894239049,"results":"36","hashOfConfig":"23"},{"size":8529,"mtime":1653894239049,"results":"37","hashOfConfig":"23"},{"size":12835,"mtime":1653894239049,"results":"38","hashOfConfig":"23"},{"size":1302,"mtime":1653894239049,"results":"39","hashOfConfig":"23"},{"size":566,"mtime":1653894239049,"results":"40","hashOfConfig":"23"},{"size":175,"mtime":1653894239049,"results":"41","hashOfConfig":"23"},{"size":667,"mtime":1653894239049,"results":"42","hashOfConfig":"23"},{"size":359,"mtime":1653894239049,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"18a9qnq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/coco/Github/sumit/technoveda/src/index.js",[],["93","94"],"/home/coco/Github/sumit/technoveda/src/App.js",[],"/home/coco/Github/sumit/technoveda/src/reportWebVitals.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Landing/Landing.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/Diabetes.js",["95"],"import React, {useState} from \"react\";\nimport './disease-details.css';\nimport './popup.css';\n\n\nexport default function Diabetes() {\n  \n\n  const [enteredPregnanices,setEnteredPregnancies] = useState('');\n  const [enteredGlucose,setEnteredGlucose] = useState('');\n  const [enteredBloodPressure,setEnteredBloodPressure] = useState('');\n  const [enteredSkinThickness,setEnteredSkinThickness] = useState('');\n  const [enteredInsulin,setEnteredInsulin] = useState('');\n  const [enteredBmi,setEnteredBmi] = useState('');\n  const [enteredDiabetesPedigree,setEnteredDiabetesPedigree] = useState('');\n  const [enteredAge,setEnteredAge] = useState('');\n  const [output,setOutput] = useState('');\n\n\n  const pregnanicesChangeHandler = (event) => {\n      setEnteredPregnancies(event.target.value);\n  }; \n\n  const glucoseChangeHandler = (event) => {\n    setEnteredGlucose(event.target.value);\n  }; \n  const bloodPressureChangeHandler = (event) => {\n  setEnteredBloodPressure(event.target.value);\n  }; \n  const skinThicknessChangeHandler = (event) => {\n    setEnteredSkinThickness(event.target.value);\n  }; \n  const insulinChangeHandler = (event) => {\n    setEnteredInsulin(event.target.value);\n  }; \n  const bmiChangeHandler = (event) => {\n    setEnteredBmi(event.target.value);\n  }; \n  const diabestesPedigreeChangeHandler = (event) => {\n    setEnteredDiabetesPedigree(event.target.value);\n  }; \n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  }; \n \n\n  function handleSubmit(e) {\n\n\n\n    e.preventDefault();\n    const submittingValue = {\n     'Pregnancies' : enteredPregnanices,\n     'Glucose' : enteredGlucose,\n     'BloodPressure' : enteredBloodPressure,\n     'SkinThickness' :enteredSkinThickness,\n     'Insulin' : enteredInsulin,\n     'BMI' : enteredBmi,\n     'DiabetesPedigreeFunction' : enteredDiabetesPedigree,\n     'Age' : enteredAge\n    };\n   \n    setEnteredBloodPressure('');\n    setEnteredGlucose('');\n    setEnteredPregnancies('');\n    setEnteredAge('');\n    setEnteredBmi('');\n    setEnteredDiabetesPedigree('');\n    setEnteredInsulin('');\n    setEnteredSkinThickness('');\n\n\n    function displayPopUp() {\n     \n      const popup = document.getElementById('mypopup');\n      popup.style.display = \"block\";\n    }\n    \n    fetch('https://techno-vedha.herokuapp.com/diabetes',{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        //\"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify(submittingValue),\n    }).then(res => res.text())         \n    .then(text => ( console.log(text), setOutput(text), displayPopUp() )\n    ).catch((err) => {\n      console.log(err);\n    });\n\n    // fetch('https://techno-vedha.herokuapp.com/diabetes',{\n    //   method: 'GET',\n    //   headers: {\n    //     'Content-type': 'application/json',\n    //     'Accept': 'application/json'\n    //   },\n    // }).then(res => res.text())         \n    // .then(text => setOutput(text),\n    // displayPopUp()\n    // ).catch((err) => {\n    //   console.log(err);\n    // });\n  }\n  \n\n// for result popup window\n\n\nfunction closePopUp(e) {\n  e.preventDefault();\n  const popup = document.getElementById('mypopup');\n  popup.style.display = \"none\";\n}\nwindow.onclick = function(event) {\n  const popup = document.getElementById('mypopup');\n  if (event.target === popup) {\n    popup.style.display = \"none\";\n  }\n}\n\n\n\n\n    return (\n        <>\n        <br />\n        <br />\n        <br />\n        <div class=\"form\">\n        <form onSubmit={handleSubmit}>\n        \n  <label>\n  Pregnancies:\n    <input type=\"number\" name=\"Pregnancies\" required min=\"1\" max=\"17\" value={enteredPregnanices} onChange={pregnanicesChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Glucose:\n    <input type=\"number\" name=\"Glucose\" required min=\"1\" max=\"199\" value={enteredGlucose} onChange={glucoseChangeHandler} />\n  </label>\n  <br />\n  <label>\n  BloodPressure:\n    <input type=\"number\" name=\"BloodPressure\" required min=\"20\" max=\"180\" value={enteredBloodPressure} onChange={bloodPressureChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  SkinThickness:\n    <input type=\"number\" name=\"SkinThickness\" required min=\"0\" max=\"90\" value={enteredSkinThickness} onChange={skinThicknessChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Insulin:\n    <input type=\"number\" name=\"Insulin\" required min=\"0\" max=\"846\" value={enteredInsulin} onChange={insulinChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  BMI:\n    <input type=\"number\" name=\"BMI\" required step=\"0.01\" min=\"0\" max=\"67.1\" value={enteredBmi} onChange={bmiChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  DiabetesPedigreeFunction:\n    <input type=\"number\" name=\"DiabetesPedigreeFunction\" required step=\"0.001\" min=\"0.078\" max=\"2.42\" value={enteredDiabetesPedigree} onChange={diabestesPedigreeChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Age:\n    <input type=\"number\" name=\"Age\" required min=\"1\" max=\"100\" value={enteredAge} onChange={ageChangeHandler}/>\n  </label>\n  <br />\n \n  <input id=\"disease-submit\" type=\"submit\" value=\"Submit\" />\n      {/* <p>{output}</p> */}\n\n      <div id=\"mypopup\" class=\"popup-container\">\n\n\n        <div class=\"popup-content\">\n          <span onClick={closePopUp} class=\"close-btn\">&times;</span>\n          <p>There is <strong> {output} </strong> chance of you having this disease.</p>\n        </div>\n\n      </div>\n  \n</form>\n\n\n</div>\n\n </>\n\n\n);\n\n\n\n}","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/BreastCancer.js",["96"],"import React, {useState} from \"react\";\nimport './disease-details.css';\nimport './popup.css';\n\n\nexport default function BreastCancer() {\n\n\n  const [enteredRadiusMean,setEnteredRadiusMean] = useState('');\n  const [enteredPerimeterMean,setEnteredPerimeterMean] = useState('');\n  const [enteredAreaMean,setEnteredAreaMean] = useState('');\n\n  const [enteredConcavePointsMean,setEnteredConcavePointsMean] = useState('');\n  const [enteredAreaSe,setEnteredAreaSe] = useState('');\n\n\n  const [enteredRadiusWorst,setEnteredRadiusWorst] = useState('');\n  const [enteredPerimeterWorst,setEnteredPerimeterWorst] = useState('');\n  const [enteredAreaWorst,setEnteredAreaWorst] = useState('');\n\n  const [enteredConcavityWorst,setEnteredConcavityWorst] = useState('');\n  const [enteredConcavePointsWorst,setEnteredConcavePointsWorst] = useState('');\n  const [output,setOutput] = useState('');\n\n\n\n\n  const RadiusMeanChangeHandler = (event) => {\n    setEnteredRadiusMean(event.target.value);\n  }; \n  const PerimeterMeanChangeHandler = (event) => {\n    setEnteredPerimeterMean(event.target.value);\n  }; \n  const AreaMeanChangeHandler = (event) => {\n    setEnteredAreaMean(event.target.value);\n  }; \n\n  const ConcavePointsMeanChangeHandler = (event) => {\n    setEnteredConcavePointsMean(event.target.value);\n  }; \n  const AreaSeChangeHandler = (event) => {\n    setEnteredAreaSe(event.target.value);\n  }; \n  const RadiusWorstChangeHandler = (event) => {\n    setEnteredRadiusWorst(event.target.value);\n  }; \n  const PerimeterWorstChangeHandler = (event) => {\n    setEnteredPerimeterWorst(event.target.value);\n  }; \n  const AreaWorstChangeHandler = (event) => {\n    setEnteredAreaWorst(event.target.value);\n  }; \n  const ConcavityWorstChangeHandler = (event) => {\n    setEnteredConcavityWorst(event.target.value);\n  }; \n  const ConcavePointsWorstChangeHandler = (event) => {\n    setEnteredConcavePointsWorst(event.target.value);\n  }; \n\n\n\n  function handleSubmit(e) {\n\n    // if(enteredAreaWorst > 50 || enteredAreaWorst < 15) {\n    //   alert(\"Enter AreaWorst between range 15 - 50\");\n    //   return;\n    // }\n    // if(enteredRadiusWorst > 10 || enteredRadiusWorst < 2) {\n    //   alert(\"Enter RadiusWorst between range 2 - 10\");\n    //   return;\n    // }\n    // if(enteredPerimeterMean > 15 || enteredPerimeterMean < 5) {\n    //   alert(\"Enter PerimeterMean between range 5 - 15\");\n    //   return;\n    // }\n    // if(enteredConcavePointsWorst > 1 || enteredConcavePointsWorst < 0) {\n    //   alert(\"Enter ConcavePointsWorst between range 0 - 1\");\n    //   return;\n    // }\n    // if(enteredPerimeterWorst > 15 || enteredPerimeterWorst < 5) {\n    //   alert(\"Enter PerimeterWorst between range 5 - 15\");\n    //   return;\n    // }\n    // if(enteredAreaMean > 40 || enteredAreaMean < 10) {\n    //   alert(\"Enter AreaMean between range 10 - 40\");\n    //   return;\n    // }\n    // if(enteredConcavePointsMean > 1 || enteredConcavePointsMean < 0) {\n    //   alert(\"Enter ConcavePointsMean between range 0 - 1\");\n    //   return;\n    // }\n    // if(enteredAreaSe > 15 || enteredAreaSe < 1) {\n    //   alert(\"Enter AreaSe between range 0 - 15\");\n    //   return;\n    // }\n    // if(enteredRadiusMean > 5 ||enteredRadiusMean < 1) {\n    //   alert(\"Enter RadiusMean between range 1 - 5\");\n    //   return;\n    // }\n   \n\n    e.preventDefault();\n    const submittingValue = {\n     'radius-mean' : enteredRadiusMean,\n     'perimeter-mean' :enteredPerimeterMean,\n     'area-mean' : enteredAreaMean,\n     'concave-points-mean' : enteredConcavePointsMean,\n     'area-se' : enteredAreaSe,\n     'radius-worst' : enteredRadiusWorst,\n     'perimeter-worst' : enteredPerimeterWorst,\n     'area-worst' : enteredAreaWorst,\n     'concavity-worst' : enteredConcavityWorst,\n     'concave-points-worst' : enteredConcavePointsWorst,\n    };\n   \n    setEnteredRadiusMean('');\n    setEnteredPerimeterMean('');\n    setEnteredAreaMean('');\n    setEnteredConcavePointsMean('');\n    setEnteredAreaSe('');\n    setEnteredRadiusWorst('');\n    setEnteredPerimeterWorst('');\n    setEnteredAreaWorst('');\n    setEnteredConcavityWorst('');\n    setEnteredConcavePointsWorst('');\n\n    function displayPopUp() {\n      \n      const popup = document.getElementById('mypopup');\n      popup.style.display = \"block\";\n    }\n\n\n    \n    fetch('https://techno-vedha.herokuapp.com/breast',{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        //\"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify(submittingValue),\n    }).then(res => res.text())         \n    .then(text => ( console.log(text), setOutput(text), displayPopUp() )\n    ).catch((err) => {\n      console.log(err);\n    });\n\n    // fetch('https://techno-vedha.herokuapp.com/breast',{\n    //   method: 'GET',\n    //   headers: {\n    //     'Content-type': 'application/json',\n    //     'Accept': 'application/json'\n    //   },\n    // }).then(res => res.text())         \n    // .then(text => setOutput(text),\n    // displayPopUp()\n    // ).catch((err) => {\n    //   console.log(err);\n    // });  \n  }\n\n\n\n// for result popup window\n\n \n  function closePopUp(e) {\n    e.preventDefault();\n    const popup = document.getElementById('mypopup');\n    popup.style.display = \"none\";\n  }\n  window.onclick = function(event) {\n    const popup = document.getElementById('mypopup');\n    if (event.target === popup) {\n      popup.style.display = \"none\";\n    }\n  }\n\n\n\n\n  \n    return (\n        <>\n        <br />\n        <br />\n        <br />\n        <div class=\"form\">\n        <form onSubmit={handleSubmit}>\n  \n  <label>\n  RADIUS_MEAN:\n    <input type=\"number\" name=\"RadiusMean\" step=\"0.001\" required min=\"6.981\" max=\"28.11\" value={enteredRadiusMean} onChange={RadiusMeanChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  PERIMETER_MEAN:\n    <input type=\"number\" name=\"PerimeterMean\" step=\"0.001\" required min=\"43.79\" max=\"188.5\" value={enteredPerimeterMean} onChange={PerimeterMeanChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  AREA_MEAN:\n    <input type=\"number\" name=\"AreaMean\" step=\"0.001\" required min=\"143.5\" max=\"2501\" value={enteredAreaMean} onChange={AreaMeanChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  CONCAVE POINTS_MEAN:\n    <input type=\"number\" name=\"ConcavePointsMean\" step=\"0.001\" required min=\"0\" max=\"0.2012\" value={enteredConcavePointsMean} onChange={ConcavePointsMeanChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  AREA_SE:\n    <input type=\"number\" name=\"AreaSe\" step=\"0.001\" required min=\"6.802\" max=\"542.2\" value={enteredAreaSe} onChange={AreaSeChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  RADIUS_WORST:\n    <input type=\"number\" name=\"RadiusWorst\" step=\"0.001\" required min=\"7.93\" max=\"36.04\" value={enteredRadiusWorst} onChange={RadiusWorstChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  PERIMETER_WORST:\n    <input type=\"number\" name=\"PerimeterWorst\" step=\"0.001\" required min=\"50.41\" max=\"251.2\" value={enteredPerimeterWorst} onChange={PerimeterWorstChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  AREA_WORST:\n    <input type=\"number\" name=\"AreaWorst\" step=\"0.001\" required min=\"185.2\" max=\"4254\" value={enteredAreaWorst} onChange={AreaWorstChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  CONCAVITY_WORST:\n    <input type=\"number\" name=\"ConcavityWorst\" step=\"0.001\" required min=\"0\" max=\"1.252\" value={enteredConcavityWorst} onChange={ConcavityWorstChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  CONCAVE POINTS_WORST:\n    <input type=\"number\" name=\"ConcavePointsWorst\" step=\"0.001\" required min=\"0\" max=\"0.291\" value={enteredConcavePointsWorst} onChange={ConcavePointsWorstChangeHandler}/>\n  </label>\n  <br />\n\n  <input id=\"disease-submit\"  type=\"submit\" value=\"Submit\" />\n      {/* <p>{output}</p> */}\n\n      <div id=\"mypopup\" class=\"popup-container\">\n\n\n        <div class=\"popup-content\">\n          <span onClick={closePopUp} class=\"close-btn\">&times;</span>\n          <p>There is <strong> {output} </strong> chance of you having this disease.</p>\n        </div>\n\n      </div>\n \n</form>\n</div>\n        </>\n    );\n\n}\n","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/Diseases.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/heart-disease.js",["97"],"import React, {useState} from \"react\";\nimport './disease-details.css';\nimport './popup.css';\n\n\nexport default function HeartDisease() {\n\n\n  const [enteredAge,setEnteredAge] = useState('');\n  const [enteredSex,setEnteredSex] = useState('');\n  const [enteredCp,setEnteredCp] = useState('');\n  const [enteredTrestbps,setEnteredTrestbps] = useState('');\n  const [enteredChol,setEnteredChol] = useState('');\n  const [enteredFbs,setEnteredFbs] = useState('');\n  const [enteredRestecg,setEnteredRestecg] = useState('');\n  const [enteredThalach,setEnteredThalach] = useState('');\n  const [enteredExang,setEnteredExang] = useState('');\n  const [enteredOldpeak,setEnteredOldpeak] = useState('');\n  const [enteredSlope,setEnteredSlope] = useState('');\n  const [enteredCathal,setEnteredCathal] = useState('');\n  const [output,setOutput] = useState('');\n\n\n  const AgeChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n      };\n    const SexChangeHandler = (event) => {\n    setEnteredSex(event.target.value);\n      };\n    const CpChangeHandler = (event) => {\n    setEnteredCp(event.target.value);\n      };\n    const TrestbpsChangeHandler = (event) => {\n    setEnteredTrestbps(event.target.value);\n      };\n    const CholChangeHandler = (event) => {\n    setEnteredChol(event.target.value);\n      };\n    const FbsChangeHandler = (event) => {\n    setEnteredFbs(event.target.value);\n      };\n    const RestecgChangeHandler = (event) => {\n    setEnteredRestecg(event.target.value);\n      };\n    const ThalachChangeHandler = (event) => {\n    setEnteredThalach(event.target.value);\n      };\n    const ExangChangeHandler = (event) => {\n    setEnteredExang(event.target.value);\n      };\n    const OldpeakChangeHandler = (event) => {\n    setEnteredOldpeak(event.target.value);\n      };\n    const SlopeChangeHandler = (event) => {\n    setEnteredSlope(event.target.value);\n      };\n    const CathalChangeHandler = (event) => {\n    setEnteredCathal(event.target.value);\n      };\n    \n\n\n      function handleSubmit(e) {\n\n\n        e.preventDefault();\n        const submittingValue = {\n          'age' : enteredAge,\n          'sex' : enteredSex,\n          'cp' : enteredCp,\n          'trestbps' : enteredTrestbps,\n          'chol' : enteredChol,\n          'fbs' : enteredFbs,\n          'restecg' : enteredRestecg,\n          'thalach' : enteredThalach,\n          'exang' : enteredExang,\n          'oldpeak' : enteredOldpeak,\n          'slope' : enteredSlope,\n          'cathal' : enteredCathal\n        };\n       \n        setEnteredAge('');\n        setEnteredSex('');\n        setEnteredCp('');\n        setEnteredTrestbps('');\n        setEnteredChol('');\n        setEnteredFbs('');\n        setEnteredRestecg('');\n        setEnteredThalach('');\n        setEnteredExang('');\n        setEnteredOldpeak('');\n        setEnteredSlope('');\n        setEnteredCathal('');\n        \n    \n        function displayPopUp() {\n\n          const popup = document.getElementById('mypopup');\n          popup.style.display = \"block\";\n        }\n        \n        fetch('https://techno-vedha.herokuapp.com/heart',{\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n            //\"Access-Control-Allow-Origin\": \"*\"\n          },\n          body: JSON.stringify(submittingValue),\n        }).then(res => res.text())         \n        .then(text => ( console.log(text), setOutput(text), displayPopUp() )\n        ).catch((err) => {\n          console.log(err);\n        });\n    \n        // fetch('https://techno-vedha.herokuapp.com/heart',{\n        //   method: 'GET',\n        //   headers: {\n        //     'Content-type': 'application/json',\n        //     'Accept': 'application/json'\n        //   },\n        // }).then(res => res.text())         \n        // .then(text => setOutput(text),\n        // displayPopUp()\n        // ).catch((err) => {\n        //   console.log(err);\n        // });\n      }\n\n// for result popup window\n\n\nfunction closePopUp(e) {\n  e.preventDefault();\n  const popup = document.getElementById('mypopup');\n  popup.style.display = \"none\";\n}\nwindow.onclick = function(event) {\n  const popup = document.getElementById('mypopup');\n  if (event.target === popup) {\n    popup.style.display = \"none\";\n  }\n}\n\n\n//Validation\nfunction genderValidation() {\n  const gender = document.getElementById('gender');\n\n  gender.addEventListener('input', function() {\n    if(gender.validity.patternMismatch) {\n      gender.setCustomValidity(\"Enter For Male: M or m and for Female: F or f \");\n    } else {\n      gender.setCustomValidity(\"\");\n    }\n  });\n}\n\nfunction validation123() {\n  let restecg = document.getElementById('restecg');\n\n  restecg.oninput = function() {\n    if(restecg.validity.rangeOverflow || restecg.validity.rangeUnderflow) {\n      restecg.setCustomValidity(\"Enter Resting Electrocardiograghic Result: 0 ,1, 2\");\n    }else {\n      restecg.setCustomValidity(\"\");\n    }\n  }\n}\n\nfunction validation01() {\n  const fbs = document.getElementById('fbs');\n  const exang = document.getElementById('exang');\n  \n  fbs.addEventListener('input', function() {\n    if(fbs.validity.rangeOverflow || fbs.validity.rangeUnderflow) {\n      fbs.setCustomValidity(\"If you have Fasting Sugar Enter: 1, else Enter: 0\");\n    }else {\n      fbs.setCustomValidity(\"\");\n    }\n  });\n  exang.addEventListener('input', function() {\n    if(exang.validity.rangeOverflow || exang.validity.rangeUnderflow) {\n      exang.setCustomValidity(\"If you Exercise Enter: 1, else Enter: 0\");\n    }else {\n      exang.setCustomValidity(\"\");\n    }\n  });\n}\n\n    return (\n        <>\n        <br />\n        <br />\n        <br />\n        <div class=\"form\">\n        <form onSubmit={handleSubmit}>\n  <label>\n  AGE:\n    <input type=\"number\" name=\"Age\" required min=\"1\" max=\"100\"  value={enteredAge} onChange={AgeChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  GENDER:\n    <input type=\"text\" id=\"gender\"onInput={genderValidation} name=\"Sex\" required pattern=\"[f]|[m]|[F]|[M]\"  value={enteredSex} onChange={SexChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Chest Pain Type:\n    <input type=\"number\" name=\"Cp\" required  value={enteredCp} onChange={CpChangeHandler} />\n  </label>\n  <br />\n  <label>\n  TRESTBPS:\n    <input type=\"number\" name=\"Trestbps\" required  value={enteredTrestbps} onChange={TrestbpsChangeHandler} />\n  </label>\n  <br />\n  <label>\n  CHOLESTEROL:\n    <input type=\"number\" name=\"Chol\" required  value={enteredChol} onChange={CholChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Fasting Sugar:\n    <input type=\"number\" onInput={validation01} id=\"fbs\" name=\"Fbs\" required min=\"0\" max=\"1\"  value={enteredFbs} onChange={FbsChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Resting Electrocardiograghic:\n    <input type=\"number\" onInput={validation123} id=\"restecg\" name=\"Restecg\" required min=\"0\" max=\"2\"  value={enteredRestecg} onChange={RestecgChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Maximum Heartrate:\n    <input type=\"number\" name=\"Thalach\" required  value={enteredThalach} onChange={ThalachChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Exercise:\n    <input type=\"number\" id=\"exang\" onInput={validation01} name=\"Exang\"  required min=\"0\" max=\"1\" value={enteredExang} onChange={ExangChangeHandler} />\n  </label>\n  <br />\n  <label>\n  OLDPEAK:\n    <input type=\"number\" name=\"Oldpeak\" required   value={enteredOldpeak} onChange={OldpeakChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Slope of Peak Exercise:\n    <input type=\"number\" name=\"Slope\"  required min=\"0\" max=\"3\" value={enteredSlope} onChange={SlopeChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Major Vessel:\n    <input type=\"number\" name=\"Cathal\"  required value={enteredCathal} onChange={CathalChangeHandler} />\n  </label>\n  <br />\n  \n \n  <input id=\"disease-submit\"  type=\"submit\" value=\"Submit\" />\n      {/* <p>{output}</p> */}\n\n      <div id=\"mypopup\" class=\"popup-container\">\n\n\n        <div class=\"popup-content\">\n          <span onClick={closePopUp} class=\"close-btn\">&times;</span>\n          <p>There is <strong> {output} </strong> chance of you having this disease.</p>\n        </div>\n\n      </div>\n</form>\n</div>\n        </>\n    );\n\n}","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/Liver-patient.js",["98"],"import React, {useState} from \"react\";\nimport './disease-details.css';\nimport './popup.css';\n\n\nexport default function LiverPatient() {\n\n  const [enteredAge,setEnteredAge] = useState('');\n  const [enteredAlamineaminotransferase,setEnteredAlamineaminotransferase] = useState('');\n  const [enteredAlbumin,setEnteredAlbumin] = useState('');\n  const [enteredAmbuminandglobulinratio,setEnteredAmbuminandglobulinratio] = useState('');\n  const [enteredAspartateaminotransferase,setEnteredAspartateaminotransferase] = useState('');\n  const [enteredBilirubin,setEnteredBilirubin] = useState('');\n  const [enteredDirectbilirubin,setEnteredDirectbilirubin] = useState('');\n\n  const [enteredGender,setEnteredGender] = useState('');\n  const [enteredTotalprotiens,setEnteredTotalporteins] = useState('');\n  const [enteredPhospotase,setEnteredPhospotase] = useState('');\n \n  const [output,setOutput] = useState('');\n\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n}; \n\nconst alamineaminotransferaseChangeHandler = (event) => {\n  setEnteredAlamineaminotransferase(event.target.value);\n}; \nconst genderChangeHandler = (event) => {\nsetEnteredGender(event.target.value);\n}; \nconst belirubinChangeHandler = (event) => {\n  setEnteredBilirubin(event.target.value);\n}; \nconst directbilirubinChangeHandler = (event) => {\n  setEnteredDirectbilirubin(event.target.value);\n}; \nconst phospotaseChangeHandler = (event) => {\n  setEnteredPhospotase(event.target.value);\n}; \nconst aspartateaminotransferaseChangeHandler = (event) => {\n  setEnteredAspartateaminotransferase(event.target.value);\n}; \nconst totalprotiensChangeHandler = (event) => {\n  setEnteredTotalporteins(event.target.value);\n}; \nconst albuminChangeHandler = (event) => {\n  setEnteredAlbumin(event.target.value);\n}; \nconst ambuminandglobulinratioChangeHandler = (event) => {\n  setEnteredAmbuminandglobulinratio(event.target.value);\n}; \n\n\n\n  function handleSubmit(e) {\n\n    e.preventDefault();\n    const submittingValue = {\n\n    'Age' :    enteredAge,\n    \"Alamine_Aminotransferase\":  enteredAlamineaminotransferase,\n    \"Albumin\": enteredAlbumin,\n    \"Albumin_and_Globulin_Ratio\": enteredAmbuminandglobulinratio,\n    \"Aspartate_Aminotransferase\": enteredAspartateaminotransferase,\n    \"Total_Bilirubin\": enteredBilirubin,\n    \"Direct_Bilirubin\": enteredDirectbilirubin,\n\n    'Gender': enteredGender,\n    \"Total_Protiens\": enteredTotalprotiens,\n    \"Alkaline_Phosphotase\": enteredPhospotase\n    };\n\n    \n   \n    setEnteredAge('');\n    setEnteredAlamineaminotransferase('');\n    setEnteredAlbumin('');\n    setEnteredAmbuminandglobulinratio('');\n    setEnteredAspartateaminotransferase('');\n    setEnteredBilirubin('');\n    setEnteredDirectbilirubin('');\n    setEnteredGender('');\n    setEnteredTotalporteins('');\n    setEnteredPhospotase('');\n\n    \n\n    function displayPopUp() {\n      \n      const popup = document.getElementById('mypopup');\n      popup.style.display = \"block\";\n    }\n    \n    fetch('https://techno-vedha.herokuapp.com/liver',{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        //\"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify(submittingValue),\n    }).then(res => res.text())         \n    .then(text => ( console.log(text), setOutput(text), displayPopUp() )\n    ).catch((err) => {\n      console.log(err);\n    });\n\n    // fetch('https://techno-vedha.herokuapp.com/liver',{\n    //   method: 'GET',\n    //   headers: {\n    //     'Content-type': 'application/json',\n    //     'Accept': 'application/json'\n    //   },\n    // }).then(res => res.text())         \n    // .then(text => setOutput(text),\n    // displayPopUp()\n    // ).catch((err) => {\n    //   console.log(err);\n    // });\n  }\n\n\n  // for result popup window\n\n\n  function closePopUp(e) {\n    e.preventDefault();\n    const popup = document.getElementById('mypopup');\n    popup.style.display = \"none\";\n  }\n  window.onclick = function(event) {\n    const popup = document.getElementById('mypopup');\n    if (event.target === popup) {\n      popup.style.display = \"none\";\n    }\n  }\n\n\n  //Validation\nfunction genderValidation() {\n  const gender = document.getElementById('gender');\n\n  gender.addEventListener('input', function() {\n    if(gender.validity.patternMismatch) {\n      gender.setCustomValidity(\"Enter For Male: M or m and for Female: F or f \");\n    } else {\n      gender.setCustomValidity(\"\");\n    }\n  });\n}\n\n\n\n    return (\n        <div>\n        <br />\n        <br />\n        <br />\n        <div class=\"form\">\n        <form onSubmit={handleSubmit}>\n  <label>\n  Gender:\n    <input type=\"text\" id=\"gender\" onInput={genderValidation} required pattern=\"[f]|[F]|[m]|[M]\" name=\"Gender\" value={enteredGender} onChange={genderChangeHandler} />\n  </label>\n  <br />\n  <label>\n  AGE:\n    <input type=\"number\" name=\"Age\" required min=\"1\" max=\"100\" value={enteredAge} onChange={ageChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Total_Bilirubin:\n    <input type=\"number\" name=\"Totalbilirubin\" required step=\"0.1\"value={enteredBilirubin} onChange={belirubinChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Direct_Bilirubin:\n    <input type=\"number\" name=\"Directbilirubin\"required step=\"0.1\" value={enteredDirectbilirubin} onChange={directbilirubinChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Alkaline_Phosphotase:\n    <input type=\"number\" name=\"Alkalinephostase\" required step=\"0.1\"value={enteredPhospotase} onChange={phospotaseChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Alamine_Aminotransferase:\n    <input type=\"number\" name=\"Alamineaminotransferase\"required step=\"0.1\" value={enteredAlamineaminotransferase} onChange={alamineaminotransferaseChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Aspartate_Aminotransferase:\n    <input type=\"number\" name=\"Aspartateaminotransferase\"required step=\"0.1\" value={enteredAspartateaminotransferase} onChange={aspartateaminotransferaseChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Total_Protiens:\n    <input type=\"number\" name=\"Totalprotiens\" required step=\"0.1\"value={enteredTotalprotiens} onChange={totalprotiensChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Albumin:\n    <input type=\"number\" name=\"Albumin\"required step=\"0.1\" value={enteredAlbumin} onChange={albuminChangeHandler}/>\n  </label>\n  <br />\n  <label>\n  Albumin_and_Globulin_Ratio:\n    <input type=\"number\" name=\"Ambuminandglobulinratio\" required step=\"0.1\"value={enteredAmbuminandglobulinratio} onChange={ambuminandglobulinratioChangeHandler}/>\n  </label>\n  <br />\n  \n \n \n  <input id=\"disease-submit\" type=\"submit\" value=\"Submit\" />\n      {/* <p>{output}</p> */}\n\n      <div id=\"mypopup\" class=\"popup-container\">\n\n\n        <div class=\"popup-content\">\n          <span onClick={closePopUp} class=\"close-btn\">&times;</span>\n          <p>There is <strong> {output} </strong> chance of you having this disease.</p>\n        </div>\n\n      </div>\n</form>\n\n</div>\n </div>\n    );\n\n}","/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/Navbar.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Footer/Footer.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Authentication/Signup.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Loading/Loading.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Authentication/Login.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/Cardiovascular.js",["99"],"import React, {useState} from \"react\";\nimport './disease-details.css';\nimport './popup.css';\n\n\nexport default function Cardiovascular() {\n\n  const [enteredAge,setEnteredAge] = useState('');\n  const [enteredGender,setEnteredGender] = useState('');\n  const [enteredHeight,setEnteredHeight] = useState('');\n  const [enteredWeight,setEnteredWeight] = useState('');\n  const [enteredAp_hi,setEnteredAp_hi] = useState('');\n  const [enteredAp_lo,setEnteredAp_lo] = useState('');\n  const [enteredCholestrol,setEnteredCholestrol] = useState('');\n  const [enteredGluc,setEnteredGluc] = useState('');\n  const [enteredSmoke,setEnteredSmoke] = useState('');\n  const [enteredAlco,setEnteredAlco] = useState('');\n  const [enteredActive,setEnteredActive] = useState('');\n  const [enteredBMI,setEnteredBMI] = useState('');\n  const [output,setOutput] = useState('');\n\n\n  const AgeChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  }; \n  const GenderChangeHandler = (event) => {\n  setEnteredGender(event.target.value);\n  }; \n  const HeightChangeHandler = (event) => {\n    setEnteredHeight(event.target.value);\n  }; \n  const WeightChangeHandler = (event) => {\n    setEnteredWeight(event.target.value);\n  }; \n  const Ap_hiChangeHandler = (event) => {\n    setEnteredAp_hi(event.target.value);\n  }; \n  const Ap_loChangeHandler = (event) => {\n    setEnteredAp_lo(event.target.value);\n  }; \n  const CholestrolChangeHandler = (event) => {\n    setEnteredCholestrol(event.target.value);\n  }; \n  const GlucChangeHandler = (event) => {\n    setEnteredGluc(event.target.value);\n  }; \n  const SmokeChangeHandler = (event) => {\n    setEnteredSmoke(event.target.value);\n  }; \n  const AlcoChangeHandler = (event) => {\n    setEnteredAlco(event.target.value);\n  }; \n  const ActiveChangeHandler = (event) => {\n    setEnteredActive(event.target.value);\n  }; \n  const BMIChangeHandler = (event) => {\n    setEnteredBMI(event.target.value);\n  }; \n\n\n  function handleSubmit(e) {\n\n    e.preventDefault();\n    const submittingValue = {\n     'age' : enteredAge,\n     'gender' : enteredGender,\n     'height' :enteredHeight,\n     'weight' : enteredWeight,\n     'ap_hi' : enteredAp_hi,\n     'ap_lo' : enteredAp_lo,\n     'cholestrol' : enteredCholestrol,\n     'gluc' : enteredGluc,\n     'smoke' : enteredSmoke,\n     'alco' : enteredAlco,\n     'active' : enteredActive,\n     'bmi' : enteredBMI\n    };\n   \n    setEnteredAge('');\n    setEnteredGender('');\n    setEnteredHeight('');\n    setEnteredWeight('');\n    setEnteredAp_hi('');\n    setEnteredAp_lo('');\n    setEnteredCholestrol('');\n    setEnteredGluc('');\n    setEnteredSmoke('');\n    setEnteredAlco('');\n    setEnteredActive('');\n    setEnteredBMI('');\n\n\n\n   \n\n    function displayPopUp() {\n     \n      const popup = document.getElementById('mypopup');\n      popup.style.display = \"block\";\n    }\n\n\n    \n    fetch('https://techno-vedha.herokuapp.com/cardio',{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        //\"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify(submittingValue),\n    }).then(res => res.text())         \n    .then(text => ( console.log(text), setOutput(text), displayPopUp() )\n    ).catch((err) => {\n      console.log(err);\n    });\n\n    // fetch('https://techno-vedha.herokuapp.com/cardio',{\n    //   method: 'GET',\n    //   headers: {\n    //     'Content-type': 'application/json',\n    //     'Accept': 'application/json'\n    //   },\n    // }).then(res => res.text())         \n    // .then(text => setOutput(text),\n    // displayPopUp()\n    // ).catch((err) => {\n    //   console.log(err);\n    // });\n  }\n\n\n\n// for result popup window\n\n\nfunction closePopUp(e) {\n  e.preventDefault();\n  const popup = document.getElementById('mypopup');\n  popup.style.display = \"none\";\n}\nwindow.onclick = function(event) {\n  const popup = document.getElementById('mypopup');\n  if (event.target === popup) {\n    popup.style.display = \"none\";\n  }\n}\n\n\n//Validation\nfunction genderValidation() {\n  const gender = document.getElementById('gender');\n\n  gender.addEventListener('input', function() {\n    if(gender.validity.patternMismatch) {\n      gender.setCustomValidity(\"Enter For Male: M or m and for Female: F or f \");\n    } else {\n      gender.setCustomValidity(\"\");\n    }\n  });\n}\n\nfunction validation123() {\n  let cholestrol = document.getElementById('chol');\n  let glucose = document.getElementById('gluc');\n\n  cholestrol.oninput = function() {\n    if(cholestrol.validity.rangeOverflow || cholestrol.validity.rangeUnderflow) {\n      cholestrol.setCustomValidity(\"Enter for Normal: 1, above Normal: 2, High: 3\");\n    }else {\n      cholestrol.setCustomValidity(\"\");\n    }\n  }\n  glucose.addEventListener('input', function() {\n    if(glucose.validity.rangeOverflow || glucose.validity.rangeUnderflow) {\n      glucose.setCustomValidity(\"Enter for Normal: 1, above Normal: 2, High: 3\");\n    }else {\n      glucose.setCustomValidity(\"\");\n    }\n  });\n}\n\nfunction validation01() {\n  const smoke = document.getElementById('smoke');\n  const alcohol = document.getElementById('alcohol');\n  const active = document.getElementById('active');\n  \n  smoke.addEventListener('input', function() {\n    if(smoke.validity.rangeOverflow || smoke.validity.rangeUnderflow) {\n      smoke.setCustomValidity(\"If you Smoke Enter: 1, else Enter: 0\");\n    }else {\n      smoke.setCustomValidity(\"\");\n    }\n  });\n  alcohol.addEventListener('input', function() {\n    if(alcohol.validity.rangeOverflow || alcohol.validity.rangeUnderflow) {\n      alcohol.setCustomValidity(\"If you drink Alcohol Enter: 1, else Enter: 0\");\n    }else {\n      alcohol.setCustomValidity(\"\");\n    }\n  });\n  active.addEventListener('input', function() {\n    if(active.validity.rangeOverflow || active.validity.rangeUnderflow) {\n      active.setCustomValidity(\"If you do Exercise Enter: 1, else Enter: 0\");\n    }else {\n      active.setCustomValidity(\"\");\n    }\n  });\n}\n\n\n\n\n    return (\n        <>\n        <br />\n        <br />\n        <br />\n        <div class=\"form\">\n        <form onSubmit={handleSubmit}>\n\n  <label>\n  AGE:\n    <input type=\"number\" name=\"Age\"required min=\"1\" max=\"100\" value={enteredAge} onChange={AgeChangeHandler} />\n  </label>\n  <br />\n  <label>\n  GENDER:\n    <input type=\"text\" onInput={genderValidation} id=\"gender\" name=\"Gender\" pattern=\"[f]|[m]|[F]|[M]\" value={enteredGender} onChange={GenderChangeHandler} />\n  </label>\n  <br />\n  <label>\n  HEIGHT:\n    <input type=\"number\" name=\"Height\"required step=\"0.01\" value={enteredHeight} onChange={HeightChangeHandler} />\n  </label>\n  <br />\n  <label>\n  WEIGHT:\n    <input type=\"number\" name=\"Weight\"required step=\"0.01\" value={enteredWeight} onChange={WeightChangeHandler} />\n  </label>\n  <br />\n  <label>\n  SYSTOLIC BP:\n    <input type=\"number\" name=\"Ap_hi\"required step=\"0.01\"value={enteredAp_hi} onChange={Ap_hiChangeHandler} />\n  </label>\n  <br />\n  <label>\n  DIASTOLIC BP:\n    <input type=\"number\" name=\"Ap_lo\" required step=\"0.01\" value={enteredAp_lo} onChange={Ap_loChangeHandler} />\n  </label>\n  <br />\n  <label>\n  CHOLESTEROL:\n    <input type=\"number\"onInput={validation123} name=\"Cholestrol\" id=\"chol\" required min=\"1\" max=\"3\" value={enteredCholestrol} onChange={CholestrolChangeHandler} />\n  </label>\n  <br />\n  <label>\n  GLUCOSE:\n    <input type=\"number\"onInput={validation123} name=\"Gluc\" id=\"gluc\" required min=\"1\" max=\"3\" value={enteredGluc} onChange={GlucChangeHandler} />\n  </label>\n  <br />\n  <label>\n  SMOKE:\n    <input type=\"number\"id=\"smoke\" onInput={validation01} name=\"Smoke\" min=\"0\" max=\"1\" required value={enteredSmoke} onChange={SmokeChangeHandler} />\n  </label>\n  <br />\n  <label>\n  ALCOHOL:\n    <input type=\"number\" id=\"alcohol\" onInput={validation01}name=\"Alco\" min=\"0\" max=\"1\" required value={enteredAlco} onChange={AlcoChangeHandler} />\n  </label>\n  <br />\n  <label>\n  ACTIVE:\n    <input type=\"number\" id=\"active\" onInput={validation01} name=\"Active\" min=\"0\" max=\"1\" required value={enteredActive} onChange={ActiveChangeHandler} />\n  </label>\n  <br />\n  <label>\n  BMI:\n    <input type=\"number\" name=\"BMI\" required min=\"3\" max=\"35\" value={enteredBMI} onChange={BMIChangeHandler} />\n  </label>\n  <br />\n \n  <input id=\"disease-submit\"  type=\"submit\" value=\"Submit\" />\n      {/* <p>{output}</p> */}\n\n      <div id=\"mypopup\" class=\"popup-container\">\n\n\n        <div class=\"popup-content\">\n          <span onClick={closePopUp} class=\"close-btn\">&times;</span>\n          <p>There is <strong> {output} </strong> chance of you having this disease.</p>\n        </div>\n\n      </div>\n</form>\n</div>\n        </>\n    );\n\n}","/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/CKD.js",["100"],"import React, {useState} from \"react\";\nimport './disease-details.css';\nimport './popup.css';\n\n\nexport default function CKD() {\n\n\nconst [enteredAge,setEnteredAge] = useState('');\nconst [enteredBp,setEnteredBp] = useState('');\nconst [enteredSg,setEnteredSg] = useState('');\nconst [enteredAl,setEnteredAl] = useState('');\nconst [enteredSu,setEnteredSu] = useState('');\nconst [enteredRbc,setEnteredRbc] = useState('');\nconst [enteredPc,setEnteredPc] = useState('');\nconst [enteredPcc,setEnteredPcc] = useState('');\nconst [enteredBa,setEnteredBa] = useState('');\nconst [enteredBgr,setEnteredBgr] = useState('');\nconst [enteredBu,setEnteredBu] = useState('');\nconst [enteredSc,setEnteredSc] = useState('');\nconst [enteredSod,setEnteredSod] = useState('');\nconst [enteredPot,setEnteredPot] = useState('');\nconst [enteredHemo,setEnteredHemo] = useState('');\nconst [enteredPcv,setEnteredPcv] = useState('');\nconst [enteredWc,setEnteredWc] = useState('');\nconst [enteredRc,setEnteredRc] = useState('');\nconst [enteredHtn,setEnteredHtn] = useState('');\nconst [enteredDm,setEnteredDm] = useState('');\nconst [enteredCad,setEnteredCad] = useState('');\nconst [enteredAppet,setEnteredAppet] = useState('');\nconst [enteredPe,setEnteredPe] = useState('');\nconst [enteredAne,setEnteredAne] = useState('');\nconst [output,setOutput] = useState('');\n\n\nconst AgeChangeHandler = (event) => {\n  setEnteredAge(event.target.value);\n}; \nconst BpChangeHandler = (event) => {\n  setEnteredBp(event.target.value);\n}; \nconst SgChangeHandler = (event) => {\n  setEnteredSg(event.target.value);\n}; \nconst AlChangeHandler = (event) => {\n setEnteredAl(event.target.value);\n}; \nconst SuChangeHandler = (event) => {\n  setEnteredSu(event.target.value);\n}; \nconst RbcChangeHandler = (event) => {\n  setEnteredRbc(event.target.value);\n}; \nconst PcChangeHandler = (event) => {\n  setEnteredPc(event.target.value);\n}; \nconst PccChangeHandler = (event) => {\n  setEnteredPcc(event.target.value);\n}; \nconst BaChangeHandler = (event) => {\n setEnteredBa(event.target.value);\n}; \nconst BgrChangeHandler = (event) => {\n  setEnteredBgr(event.target.value);\n}; \nconst BuChangeHandler = (event) => {\n  setEnteredBu(event.target.value);\n}; \nconst ScChangeHandler = (event) => {\n  setEnteredSc(event.target.value);\n}; \nconst SodChangeHandler = (event) => {\n  setEnteredSod(event.target.value);\n}; \nconst PotChangeHandler = (event) => {\n  setEnteredPot(event.target.value);\n}; \nconst HemoChangeHandler = (event) => {\n  setEnteredHemo(event.target.value);\n}; \nconst PcvChangeHandler = (event) => {\n  setEnteredPcv(event.target.value);\n}; \nconst WcChangeHandler = (event) => {\n  setEnteredWc(event.target.value);\n}; \nconst RcChangeHandler = (event) => {\n  setEnteredRc(event.target.value);\n}; \nconst HtnChangeHandler = (event) => {\n  setEnteredHtn(event.target.value);\n}; \nconst DmChangeHandler = (event) => {\n  setEnteredDm(event.target.value);\n}; \nconst CadChangeHandler = (event) => {\n  setEnteredCad(event.target.value);\n}; \nconst AppetChangeHandler = (event) => {\n  setEnteredAppet(event.target.value);\n}; \nconst PeChangeHandler = (event) => {\n  setEnteredPe(event.target.value);\n}; \nconst AneChangeHandler = (event) => {\n  setEnteredAne(event.target.value);\n}; \n \n\n\nfunction handleSubmit(e) {  \n\ne.preventDefault();\nconst submittingValue = {\n  'age' : enteredAge,\n  'bp' : enteredBp,\n  'sg' : enteredSg,\n  'al' : enteredAl,\n  'su' : enteredSu,\n  'rbc' : enteredRbc,\n  'pc' : enteredPc,\n  'pcc' : enteredPcc,\n  'ba' : enteredBa,\n  'bgr' : enteredBgr,\n  'bu' : enteredBu,\n  'sc' : enteredSc,\n  'sod' : enteredSod,\n  'pot' : enteredPot,\n  'hemo' : enteredHemo,\n  'pcv' : enteredPcv,\n  'wc' : enteredWc,\n  'rc' : enteredRc,\n  'htn' : enteredHtn,\n  'dm' : enteredDm,\n  'cad' : enteredCad,\n  'appet' : enteredAppet,\n  'pe' : enteredPe,\n  'ane' : enteredAne\n};\n\n\nsetEnteredAge('');\nsetEnteredBp('');\nsetEnteredSg('');\nsetEnteredAl('');\nsetEnteredSu('');\nsetEnteredRbc('');\nsetEnteredPc('');\nsetEnteredPcc('');\nsetEnteredBa('');\nsetEnteredBgr('');\nsetEnteredBu('');\nsetEnteredSc('');\nsetEnteredSod('');\nsetEnteredPot('');\nsetEnteredHemo('');\nsetEnteredPcv('');\nsetEnteredWc('');\nsetEnteredRc('');\nsetEnteredHtn('');\nsetEnteredDm('');\nsetEnteredCad('');\nsetEnteredAppet('');\nsetEnteredPe('');\nsetEnteredAne('');\n\n\n\n\nfunction displayPopUp() {\n  \n  const popup = document.getElementById('mypopup');\n  popup.style.display = \"block\";\n}\n    fetch('https://techno-vedha.herokuapp.com/kidney',{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        //\"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify(submittingValue),\n    }).then(res => res.text())         \n    .then(text => ( console.log(text), setOutput(text), displayPopUp() )\n    ).catch((err) => {\n      console.log(err);\n    });\n\n    // fetch('https://techno-vedha.herokuapp.com/kidney',{\n    //   method: 'GET',\n    //   headers: {\n    //     'Content-type': 'application/json',\n    //     'Accept': 'application/json'\n    //   },\n    // }).then(res => res.text())         \n    // .then(text => setOutput(text),\n    // displayPopUp()\n    // ).catch((err) => {\n    //   console.log(err);\n    // });\n  }\n\n\n// for result popup window\n\n\nfunction closePopUp(e) {\n  e.preventDefault();\n  const popup = document.getElementById('mypopup');\n  popup.style.display = \"none\";\n}\nwindow.onclick = function(event) {\n  const popup = document.getElementById('mypopup');\n  if (event.target === popup) {\n    popup.style.display = \"none\";\n  }\n}\n\n\n//Validation\nfunction validation01() {\n  const rbc = document.getElementById('rbc');\n  const pc = document.getElementById('pc');\n  const pcc = document.getElementById('pcc');\n  const ba = document.getElementById('ba');\n  const htn = document.getElementById('htn');\n  const dm = document.getElementById('dm');\n  const cad = document.getElementById('cad');\n  const appet = document.getElementById('appet');\n  const pe = document.getElementById('pe');\n  const ane = document.getElementById('ane');\n  \n  rbc.addEventListener('input', function() {\n    if(rbc.validity.rangeOverflow || rbc.validity.rangeUnderflow) {\n      rbc.setCustomValidity(\"Enter Red Blood Cell for Normal: 1, else 0\");\n    }else {\n      rbc.setCustomValidity(\"\");\n    }\n  });\n  pc.addEventListener('input', function() {\n    if(pc.validity.rangeOverflow || pc.validity.rangeUnderflow) {\n      pc.setCustomValidity(\"IfEnter Pus Cell, If present: 1 else 0\");\n    }else {\n      pc.setCustomValidity(\"\");\n    }\n  });\n  pcc.addEventListener('input', function() {\n    if(pcc.validity.rangeOverflow || pcc.validity.rangeUnderflow) {\n      pcc.setCustomValidity(\"Enter Pus Cell Slumps, If present: 1 else 0\");\n    }else {\n      pcc.setCustomValidity(\"\");\n    }\n  });\n  ba.addEventListener('input', function() {\n    if(ba.validity.rangeOverflow || ba.validity.rangeUnderflow) {\n      ba.setCustomValidity(\"Enter Bacteria, If present: 1 else 0\");\n    }else {\n      ba.setCustomValidity(\"\");\n    }\n  });\n  htn.addEventListener('input', function() {\n    if(htn.validity.rangeOverflow || htn.validity.rangeUnderflow) {\n      htn.setCustomValidity(\"Enter Hyper Tension, If present: 1 else 0\");\n    }else {\n      htn.setCustomValidity(\"\");\n    }\n  });\n  dm.addEventListener('input', function() {\n    if(dm.validity.rangeOverflow || dm.validity.rangeUnderflow) {\n      dm.setCustomValidity(\"Enter Diabetes Mellitus, If present: 1 else 0\");\n    }else {\n      dm.setCustomValidity(\"\");\n    }\n  });\n  cad.addEventListener('input', function() {\n    if(cad.validity.rangeOverflow || cad.validity.rangeUnderflow) {\n      cad.setCustomValidity(\"Enter Coronary Artery Disease, If present: 1 else 0\");\n    }else {\n      cad.setCustomValidity(\"\");\n    }\n  });\n  appet.addEventListener('input', function() {\n    if(appet.validity.rangeOverflow || appet.validity.rangeUnderflow) {\n      appet.setCustomValidity(\"Enter Appetite, If present: 1 else 0\");\n    }else {\n      appet.setCustomValidity(\"\");\n    }\n  });\n  pe.addEventListener('input', function() {\n    if(pe.validity.rangeOverflow || pe.validity.rangeUnderflow) {\n      pe.setCustomValidity(\"Enter Petel Edema, If present: 1 else 0\");\n    }else {\n      pe.setCustomValidity(\"\");\n    }\n  });\n  ane.addEventListener('input', function() {\n    if(ane.validity.rangeOverflow || ane.validity.rangeUnderflow) {\n      ane.setCustomValidity(\"Enter Anemia, If present: 1 else 0\");\n    }else {\n      ane.setCustomValidity(\"\");\n    }\n  });\n}\n\n\n\n    return (\n        <>\n        <br />\n        <br />\n        <br />\n        <div class=\"form\">\n        <form onSubmit={handleSubmit}>\n\n  <label>\n  AGE:\n    <input type=\"number\" name=\"Age\" min=\"1\" max=\"100\" required   value={enteredAge} onChange={AgeChangeHandler} />\n  </label>\n  <br />\n  <label>\n  BP:\n    <input type=\"number\" name=\"Bp\" value={enteredBp} required  onChange={BpChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Specific Gravity:\n    <input type=\"number\" name=\"Sg\" min=\"0\" max=\"3\"  required value={enteredSg} onChange={SgChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Albumin:\n    <input type=\"number\" name=\"Al\" min=\"0\" max=\"5\"  required value={enteredAl} onChange={AlChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Sugar:\n    <input type=\"number\" name=\"Su\" min=\"0\" max=\"5\" required  value={enteredSu} onChange={SuChangeHandler} />\n  </label>\n  <br />\n  <label>\n  RBC:\n    <input type=\"number\"id=\"rbc\"  onInput={validation01} name=\"Rbc\"   required min=\"0\" max=\"1\" value={enteredRbc} onChange={RbcChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Pus Cell:\n    <input type=\"number\"id=\"pc\"  onInput={validation01} name=\"Pc\"  required  min=\"0\" max=\"1\" value={enteredPc} onChange={PcChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Pus Cell Slumps:\n    <input type=\"number\" id=\"pcc\"  onInput={validation01}name=\"Pcc\"  required  min=\"0\" max=\"1\" value={enteredPcc} onChange={PccChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Bacteria :\n    <input type=\"number\" name=\"Ba\"  onInput={validation01}id=\"ba\"  required min=\"0\" max=\"1\"  value={enteredBa} onChange={BaChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Blood Glucose Random:\n    <input type=\"number\" name=\"Bgr\" value={enteredBgr}  required onChange={BgrChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Blood Urea:\n    <input type=\"number\" name=\"Bu\" value={enteredBu} required  onChange={BuChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Serem Creatinine:\n    <input type=\"number\" name=\"Sc\" value={enteredSc} required  onChange={ScChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Sodium:\n    <input type=\"number\" name=\"Sod\" value={enteredSod}  required onChange={SodChangeHandler} />\n  </label>\n  <br />\n  <label>\n    Potasium:\n    <input type=\"number\" name=\"Pot\" value={enteredPot}  required onChange={PotChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Hemoglobin:\n    <input type=\"number\" name=\"Hemo\" value={enteredHemo} required  onChange={HemoChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Pack Cell Volume:\n    <input type=\"number\" name=\"Pcv\" value={enteredPcv} required  onChange={PcvChangeHandler}  />\n  </label>\n  <br />\n  <label>\n  WBC Count:\n    <input type=\"number\" name=\"Wc\" value={enteredWc}  required onChange={WcChangeHandler} />\n  </label>\n  <br />\n  <label>\n  RBC Count:\n    <input type=\"number\" name=\"Rc\" value={enteredRc}  required onChange={RcChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Hyper Tension:\n    <input type=\"number\"id=\"htn\"  onInput={validation01}  required name=\"Htn\" min=\"0\" max=\"1\"  value={enteredHtn} onChange={HtnChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Diabetes:\n    <input type=\"number\"id=\"dm\"  onInput={validation01}  required name=\"Dm\" min=\"0\" max=\"1\"  value={enteredDm} onChange={DmChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Coronary Artery Disease:\n    <input type=\"number\"id=\"cad\"   onInput={validation01} required name=\"Cad\"  min=\"0\" max=\"1\" value={enteredCad} onChange={CadChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Appetite:\n    <input type=\"number\"id=\"appet\" onInput={validation01}   required name=\"Appet\" min=\"0\" max=\"1\"  value={enteredAppet} onChange={AppetChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Petel Edema:\n    <input type=\"number\"id=\"pe\"  onInput={validation01}name=\"Pe\"  required  min=\"0\" max=\"1\" value={enteredPe} onChange={PeChangeHandler} />\n  </label>\n  <br />\n  <label>\n  Anemia:\n    <input type=\"number\" id=\"ane\" onInput={validation01} name=\"Ane\" required  min=\"0\" max=\"1\"  value={enteredAne} onChange={AneChangeHandler} />\n  </label>\n  <br />\n  \n \n  <input id=\"disease-submit\" type=\"submit\" value=\"Submit\" />\n      {/* <p>{output}</p> */}\n\n      <div id=\"mypopup\" class=\"popup-container\">\n\n\n        <div class=\"popup-content\">\n          <span onClick={closePopUp} class=\"close-btn\">&times;</span>\n          <p>There is <strong> {output} </strong> chance of you having this disease.</p>\n        </div>\n\n      </div>\n</form>\n</div>\n        </>\n    );\n\n}","/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/ToolBar/ToolBar.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/SideDrawer/SideDrawer.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/BackDrop/BackDrop.js",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Diseases/CommonCard.jsx",[],"/home/coco/Github/sumit/technoveda/src/components/Pages/Navbar/SideDrawer/DrawerToggleButton.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":87,"column":38,"nodeType":"107","messageId":"108","endLine":87,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":143,"column":38,"nodeType":"107","messageId":"108","endLine":143,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":110,"column":42,"nodeType":"107","messageId":"108","endLine":110,"endColumn":43},{"ruleId":"105","severity":1,"message":"106","line":103,"column":38,"nodeType":"107","messageId":"108","endLine":103,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":112,"column":38,"nodeType":"107","messageId":"108","endLine":112,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":183,"column":38,"nodeType":"107","messageId":"108","endLine":183,"endColumn":39},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]